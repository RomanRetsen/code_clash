buildings = []
n = int(input())
max_hight = -1
for i in range(n):
 h, w, o = [int(j) for j in input().split()]
 buildings.append((h, w, o))
 if h > max_hight:
  max_hight = h

for i in range(max_hight, 0, -1):
 for building in buildings:
  if building[0] < i:
   print("." * (building[1] + building[2]), end="")
  else:
   print("#" * building[1], "." * building[2], sep="", end="")
 print()

"""


 # You have to print the skyline of a city to the console.
# You will be given N houses, their height, width and offset to the next building.
# A house is printed with #'s and the air is displayed as .'s
#
# *Note: The offset of the last building is always 0.
# Input
# Line 1: The number N, number of houses.
# Next N lines: 3 integers H, W, O described above.
# Output
# The skyline of the city.
# Constraints
# 0 < N < 100
# 0 < H < 15
# 0 < W < 30
# 0 <= O < 10
# Example
# Input

# 1
# 4 2 0
#
# Output
#
#
##
##
##


test 1 _______________



3
3 1 1
2 2 3
3 2 0

output

#......##
#.##...##
#.##...##


test2________________

5
4 2 1
5 3 2
2 2 0
4 1 1
3 2 0

...###........
##.###....#...
##.###....#.##
##.###..###.##
##.###..###.##

test3____________

13
11 1 0
12 2 0
11 1 2
2 1 0
4 1 0
5 9 0
4 1 3
13 1 0
14 1 2
8 1 0
9 2 0
8 1 4
1 29 0

......................#.......................................
.....................##.......................................
.##..................##.......................................
####.................##.......................................
####.................##.......................................
####.................##...##..................................
####.................##..####.................................
####.................##..####.................................
####.................##..####.................................
####....#########....##..####.................................
####...###########...##..####.................................
####...###########...##..####.................................
####..############...##..####.................................
####..############...##..####....#############################

"""

